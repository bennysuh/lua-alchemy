#summary A draft for initial project documentation

= Introduction =

This text is a source for the initial project documentation draft and is based on the results of private discussions between me and Robert. It is intended to be split to multiple documents when it would mature a bit.

Some parts are probably too silly and should be removed or rewritten.

Comments are welcome.

== Background ==

Lua is a great dynamic programming language, Adobe Flash is a great universal platform for applications and Adobe Alchemy is the tool to bind them together.

[!We should copy-paste some white-paper paragraphs on each technology here, along with proper links]

== Motivation ==

We need Lua Alchemy to...

  * ...To use run-time dynamic programming language (Lua) within the Flash framework. 
  * ...To reuse existing Lua code for the Flash-based utilities
  * ...To get a great cross-platform back-end (Flash) for (simpler) Lua-based games
  * ...To have fun with awesome new technology :-)

= Problems =

  * In Alchemy calls across C / !ActionScript boundary are slow.

  * We've got Lua VM running inside !ActionScript VM. This is also slow. It should be possible to convert Lua bytecode to AS bytecode directly with the help of [http://code.google.com/p/llvm-lua/ llvm-lua]. But see [http://marc.info/?l=lua-l&m=122847990506358&w=2 this post]: currently Alchemy uses too old version of LLVM (2.1), which is incompatible with one in llvm-lua (2.4). We should try to encourage Alchemy developers to upgrade.

= Initial file releases =

Mentioned items are more like tangents to the main project, but they may help to attract some attention.

== 1. Alchemy's lua and luac executables for OS X and Windows (and maybe Linux) ==

So interested people would be able to play with the tech without
the need to setup whole build chain.

*Problem*:

Alchemy's "executables" aren't really executables, they are swfs in a shell script with the following to execute them:

{{{ #!/Users/universalmind/code/alchemy-darwin-v0.4a/bin/swfbridge }}}

Looks like we would have to redistribute unknown amounts of Alchemy and Flex. This needs some research. It may be easier to provide detailed step-by-step build instructions.


== 2. Benchmarks for the relevant Lua code ===

Use code from Lua test/ folder (as in [http://lua-users.org/lists/lua-l/2008-08/msg00591.html this] post ) and from the [http://shootout.alioth.debian.org/u32q/lua.php Shootout].

Both code and the results so everyone would be able to reproduce them.


== 3. Official [http://www.inf.puc-rio.br/~roberto/lua/lua5.1-tests.tar.gz Lua Test Suite] run results ===

As in [http://groups.google.com/group/lua-alchemy-dev/msg/996ec28605346254 this] post.


== 4. Lua console GUI emulation ==

This probably it is most spectacular thing we're able to pull out without
implementing Lua to !ActionScript bridge. It is a nice demo anyway, and mentioned
bridge may be integrated into it later.