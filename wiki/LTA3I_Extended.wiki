#summary Documents extended AS3 interface

These functions are implemented in Lua. 

If you do not need this functionality, you may strip it. See UsingRawLuaAlchemy.

===as3.onclose(function)===
Function to call when !LuaAlchemy#close() is called.  This will typically be used to call removeListener() and do any other necessary AS3 cleanup. You may register any number of such callbacks by calling `as3.onclose()` multiple times. Callbacks would be called in the same order as they were added.
Example
{{{
as3.onclose(
  function(e)
    timer.stop()
    timer.removeEventListener(as3.class.flash.events.TimerEvent.TIMER, movebox)
  end)
}}}

*Note:* Flash doesn't reliably call anything when a Flex application is closed so the intention of this function is to do cleanup when you are creating and closing !LuaAlchemy objects numerous times during a single instance of Flash.  The cleanup is less important on shutdown of Flash since everything is stopped and all memory is recovered.

===as3.makeprinter(output)===
Returns print-like function, which appends its arguments to `output.text`, where output is arbitrary as3 object. Arguments are concatenated by the rules of Lua `print()` function.

Example
{{{
myprint = as3.makeprinter(output)
myprint("Hello from Lua")
}}}

===as3.prints(...)===

Returns a string, with arguments concatenated by the rules Lua `print()` function.

Example
{{{
local str = as3.prints("The meaning of life:", 42) --> "The meaning of life: 42"
}}}

===as3.filegetcontents(file)===

TODO

===as3.canvas===

TODO off by default; how to enable

===as3.toobject(t)===

TODO

===as3.toarray(t)===

TODO